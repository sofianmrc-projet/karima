// <auto-generated />
using System;
using Karima.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Karima.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250921184116_CompleteAllContent")]
    partial class CompleteAllContent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Karima.Api.Models.ContactRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ContactRequests");
                });

            modelBuilder.Entity("Karima.Api.Models.MediaFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltText")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long>("FileSizeBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("MimeType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("MediaFiles");
                });

            modelBuilder.Entity("Karima.Api.Models.ServiceContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("UpdatedByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("ServiceContents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Bienvenue chez Karima",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre principal de la page d'accueil",
                            Key = "home_hero_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            Content = "Votre partenaire de confiance",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Sous-titre de la page d'accueil",
                            Key = "home_hero_subtitle",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            Content = "Des solutions innovantes pour votre entreprise",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description principale de la page d'accueil",
                            Key = "home_hero_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            Content = "Découvrir nos services",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Texte du bouton CTA de la page d'accueil",
                            Key = "home_hero_cta_text",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            Content = "À propos de nous",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section à propos sur l'accueil",
                            Key = "home_about_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            Content = "Une entreprise dédiée à votre succès",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la section à propos sur l'accueil",
                            Key = "home_about_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            Content = "100+",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Première statistique - nombre",
                            Key = "home_stat_1_number",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            Content = "Projets réalisés",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Première statistique - label",
                            Key = "home_stat_1_label",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            Content = "50+",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Deuxième statistique - nombre",
                            Key = "home_stat_2_number",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            Content = "Clients satisfaits",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Deuxième statistique - label",
                            Key = "home_stat_2_label",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            Content = "5+",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Troisième statistique - nombre",
                            Key = "home_stat_3_number",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            Content = "Années d'expérience",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Troisième statistique - label",
                            Key = "home_stat_3_label",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            Content = "Nos Services",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre principal de la page services",
                            Key = "services_hero_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            Content = "Des solutions complètes et personnalisées pour répondre à tous vos besoins professionnels et vous accompagner vers l'excellence.",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la page services",
                            Key = "services_hero_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            Content = "Nos domaines d'expertise",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section des services",
                            Key = "services_section_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            Content = "Chaque service est conçu pour vous apporter une valeur ajoutée réelle et mesurable dans votre domaine d'activité.",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la section des services",
                            Key = "services_section_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            Content = "Notre méthode de travail",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section processus",
                            Key = "services_process_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            Content = "Une approche structurée et éprouvée pour garantir le succès de vos projets.",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la section processus",
                            Key = "services_process_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            Content = "Prêt à transformer votre organisation ?",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section CTA",
                            Key = "services_cta_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 20,
                            Content = "Contactez-nous dès aujourd'hui pour discuter de vos besoins et découvrir comment nos services peuvent vous aider à atteindre vos objectifs.",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la section CTA",
                            Key = "services_cta_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 21,
                            Content = "À propos de nous",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre principal de la page à propos",
                            Key = "about_hero_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 22,
                            Content = "Découvrez notre histoire et notre mission",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la page à propos",
                            Key = "about_hero_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 23,
                            Content = "Notre entreprise",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section entreprise",
                            Key = "about_company_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 24,
                            Content = "Une entreprise dédiée à l'excellence et à l'innovation",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la section entreprise",
                            Key = "about_company_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 25,
                            Content = "Notre équipe",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section équipe",
                            Key = "about_team_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 26,
                            Content = "Des professionnels passionnés et expérimentés",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la section équipe",
                            Key = "about_team_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 27,
                            Content = "Nos valeurs",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section valeurs",
                            Key = "about_values_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 28,
                            Content = "Des valeurs qui nous guident au quotidien",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la section valeurs",
                            Key = "about_values_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 29,
                            Content = "Notre mission",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section mission",
                            Key = "about_mission_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 30,
                            Content = "Accompagner nos clients vers le succès",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la section mission",
                            Key = "about_mission_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 31,
                            Content = "Notre Blog",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre principal de la page blog",
                            Key = "blog_hero_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 32,
                            Content = "Découvrez nos articles et actualités",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la page blog",
                            Key = "blog_hero_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 33,
                            Content = "Derniers articles",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section articles",
                            Key = "blog_section_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 34,
                            Content = "Restez informé de nos dernières actualités",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la section articles",
                            Key = "blog_section_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 35,
                            Content = "Restez informé",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section CTA blog",
                            Key = "blog_cta_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 36,
                            Content = "Abonnez-vous à notre newsletter",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la section CTA blog",
                            Key = "blog_cta_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 37,
                            Content = "Contactez-nous",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre principal de la page contact",
                            Key = "contact_hero_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 38,
                            Content = "Nous sommes là pour vous accompagner",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description de la page contact",
                            Key = "contact_hero_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 39,
                            Content = "Nos coordonnées",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Titre de la section informations contact",
                            Key = "contact_info_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 40,
                            Content = "123 Rue de la Paix, 75001 Paris",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Adresse de contact",
                            Key = "contact_address",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 41,
                            Content = "+33 1 23 45 67 89",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Téléphone de contact",
                            Key = "contact_phone",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 42,
                            Content = "contact@karima.com",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Email de contact",
                            Key = "contact_email",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 43,
                            Content = "Lun-Ven: 9h-18h",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Horaires de contact",
                            Key = "contact_hours",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 44,
                            Content = "Karima",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Nom de l'entreprise dans le footer",
                            Key = "footer_company_name",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 45,
                            Content = "Votre partenaire de confiance pour tous vos projets",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Description dans le footer",
                            Key = "footer_description",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 46,
                            Content = "© 2025 Karima. Tous droits réservés.",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Copyright dans le footer",
                            Key = "footer_copyright",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 47,
                            Content = "Mentions légales | Politique de confidentialité",
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Liens dans le footer",
                            Key = "footer_links_title",
                            UpdatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Karima.Api.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Done = true,
                            Title = "Créer la maquette du site Karima"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Done = true,
                            Title = "Développer l'API backend"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Done = false,
                            Title = "Implémenter le frontend React"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Done = false,
                            Title = "Configurer la base de données"
                        });
                });

            modelBuilder.Entity("Karima.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@karima.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            LastName = "Karima",
                            PasswordHash = "$2a$11$N9qo8uLOickgx2ZMRZoMyeIjZAgcfl7p92ldGxad68LJZdL17lhWy"
                        });
                });

            modelBuilder.Entity("Karima.Api.Models.MediaFile", b =>
                {
                    b.HasOne("Karima.Api.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Karima.Api.Models.ServiceContent", b =>
                {
                    b.HasOne("Karima.Api.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("UpdatedByUser");
                });
#pragma warning restore 612, 618
        }
    }
}
